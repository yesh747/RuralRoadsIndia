VilInd2012 <- aggregate(IND2012[, MB2012begin:MB2012end], by = list(IND2012$id), FUN = mean, na.rm = TRUE)
# drop data not in 2005 survey
VilInd2012[, c("MB16","MB23")] <- NULL
VilInd2012 <- rename(VilInd2012, c("Group.1" = "id", "MB3" = "mbCataract", "MB4" = "mbTuberculosis", "MB5" = "mbHighBP", "MB6" = "mbHeartDisease", "MB7" = "mbDiabetes", "MB8" = "mbLeprosy", "MB9" = "mbCancer", "MB10" = "mbAsthma", "MB11" = "mbPolio", "MB12" = "mbParalysis","MB13"="mbEpilepsy" ,"MB14" = "mbMentalIllness", "MB15" = "mbSTDorAIDS", "MB17" = "mbOtherLongTerm", "MB18" = "mbDaysIncapacitated", "MB19" = "mbTreatmentRecieved", "MB21A" = "mbTreatmentWho1", "MB21B" = "mbTreatmentWhere1", "MB22A" = "mbTreatmentWho2", "MB22B" = "mbTreatmentWhere2", "MB24" = "mbDaysHospitalized", "MB25" = "mbCostOfTreatment", "MB26" = "mbCostIncludesMedication", "MB27" = "mbCostOfMeds", "MB28" = "mbTravelExpenses"))
df2012 <- merge(df2012, VilInd2012, by="id")
rm(MB2005begin, MB2005end, MB2012begin, MB2012end, VilInd2005, VilInd2012)
# Remove Repeat Data
df2005 <- df2005[!duplicated(df2005$id),]
df2012 <- df2012[!duplicated(df2012$id),]
#2005 -------------------------------------------
# 1. Get range for tobacco and alcohol variables
TO2005begin <- which(colnames(IND2005) == "to2")
TO2005end <- which(colnames(IND2005) == "to4")
TO2012begin <- which(colnames(IND2012) == "TO4")
TO2012end <- which(colnames(IND2012) == "TO6")
## NOTE: using smoking bidis or hukkah for 2012 (TO4) but smoking cigarettes, bidis, or hukkah for 2005
# 2. Get range for school-attendance variables
SC2005begin <- which(colnames(IND2005) == "ta3")
SC2005end <- which(colnames(IND2005) == "ta4")
SC2012begin <- which(colnames(IND2012) == "TA3")
SC2012end <- which(colnames(IND2012) == "TA4")
# 3. Get range for literacy and math-score variables
LM2005begin <- which(colnames(IND2005) == "ta7lvl")
LM2005end <- which(colnames(IND2005) == "ta9lvl")
## NOTE: drop ta7lang, ta8lang, and ta9lang
LM2012begin <- which(colnames(IND2012) == "TA8B")
LM2012end <- which(colnames(IND2012) == "TA10B")
## NOTE: drop TA9A and TA10A
# 4. replace values less than 0 (survey error values) with NA.
IND2005[,c(TO2005begin:TO2005end, SC2005begin:SC2005end, LM2005begin:LM2005end)] <- lapply(IND2005[, c(TO2005begin:TO2005end, SC2005begin:SC2005end, LM2005begin:LM2005end)], function(x) replace(x, x %in% -7:-1, NA))
IND2012[,c(TO2012begin:TO2012end, SC2012begin:SC2012end, LM2012begin:LM2012end)] <- lapply(IND2012[, c(TO2012begin:TO2012end, SC2012begin:SC2012end, LM2012begin:LM2012end)], function(x) replace(x, x %in% -7:-1, NA))
# 4.1 Extract values from 2012 data cause of its dumb format
IND2012$TO4 <- as.numeric(sub("\\).*", "", sub(".*\\(", "", IND2012$TO4)))
IND2012$TO5 <- as.numeric(sub("\\).*", "", sub(".*\\(", "", IND2012$TO5)))
IND2012$TO6 <- as.numeric(sub("\\).*", "", sub(".*\\(", "", IND2012$TO6)))
IND2012$TA3 <- as.numeric(sub("\\).*", "", sub(".*\\(", "", IND2012$TA3)))
IND2012$TA4 <- as.numeric(sub("\\).*", "", sub(".*\\(", "", IND2012$TA4)))
IND2012$TA8B <- as.numeric(sub("\\).*", "", sub(".*\\(", "", IND2012$TA8B)))
IND2012$TA9B <- as.numeric(sub("\\).*", "", sub(".*\\(", "", IND2012$TA9B)))
IND2012$TA10B <- as.numeric(sub("\\).*", "", sub(".*\\(", "", IND2012$TA10B)))
IND2012$TA8A <- as.numeric(sub("\\).*", "", sub(".*\\(", "", IND2012$TA8A)))
IND2012$TA9A <- as.numeric(sub("\\).*", "", sub(".*\\(", "", IND2012$TA9A)))
IND2012$TA10A <- as.numeric(sub("\\).*", "", sub(".*\\(", "", IND2012$TA10A)))
# 5. Aggregate Data to Village Level
VilInd2005 <- aggregate(IND2005[ ,c(TO2005begin:TO2005end, SC2005begin:SC2005end, LM2005begin:LM2005end)], by=list(IND2005$id), FUN = mean, na.rm = TRUE)
VilInd2012 <- aggregate(IND2012[ ,c(TO2012begin:TO2012end, SC2012begin:SC2012end, LM2012begin:LM2012end)], by=list(IND2012$id), FUN = mean, na.rm = TRUE)
# 6. Drop irrelevant variables ta7lang, ta8lang, and ta9lang
VilInd2005[, c("ta7lang", "ta8lang", "ta9lang")] <- NULL
VilInd2012[, c("TA9A", "TA10A")] <- NULL
# 7. Rename variables
VilInd2005 <- rename(VilInd2005, c("Group.1" = "id", "to2"="smokeTobacco", "to3"="chewTobacco", "to4"="drinkAlcohol", "ta3"="attendedSchool", "ta4"="gradeCompleted", "ta7lvl"="readingScore", "ta8lvl"="mathScore", "ta9lvl"="writingScore"))
VilInd2012 <- rename(VilInd2012, c("Group.1" = "id", "TO4"="smokeTobacco", "TO5"="chewTobacco", "TO6"="drinkAlcohol", "TA3"="attendedSchool", "TA4"="gradeCompleted", "TA8B"="readingScore", "TA9B"="mathScore", "TA10B"="writingScore"))
# 8. Merge with df2005 and df2012
df2005 <- merge(df2005, VilInd2005, by="id")
df2012 <- merge(df2012, VilInd2012, by="id")
rm(TO2005begin, TO2005end, TO2012begin, TO2012end, SC2005begin, SC2005end, SC2012begin, SC2012end, LM2005begin, LM2005end, LM2012begin, LM2012end, VilInd2005, VilInd2012, IND2005, IND2012)
# 1. Decide which variables to add
## --------
# ## urban v rural -> factor binary
# HH2005$URBAN
# HH2012$URBAN2011
#
# ## total HH income -> Rs, ratio
# HH2005$INCOME
# HH2012$INCOME
#
# ## caste category -> factor
# HH2005$ID13
# HH2012$ID13
#
# ## years in place --> note 90 = forever
# HH2005$ID16
# HH2012$ID15
#
# ## toilet -> factor
# HH2005$SA4
# HH2012$SA4
#
# ## electricity -> factor binary
# HH2005$FU1
# HH2012$FU1
#
# ## electricity hours/day -> ratio
# HH2005$FU1A
# HH2012$FU1A
#
# ## drinking water source --> factor
# HH2005$WA1
# HH2012$WA1A
## --------
HH2005Controls <- c("URBAN", "INCOME", "ID13", "ID16","SA4", "FU1", "FU1A", "WA1")
HH2012Controls <- c("URBAN2011", "INCOME", "ID13", "ID15", "SA4", "FU1", "FU1A", "WA1A")
# 2. replace values less than 0 (survey error values) with NA.
HH2005[,HH2005Controls] <- lapply(HH2005[, HH2005Controls], function(x) replace(x, x %in% -7:-1, NA))
HH2012[,HH2012Controls] <- lapply(HH2012[, HH2012Controls], function(x) replace(x, x %in% -7:-1, NA))
# 3. Extract values from 2005 and 2012 data cause of its dumb format
HH2005$URBAN <- as.numeric(sub("\\).*", "", sub(".*\\(", "", HH2005$URBAN)))
HH2005$ID13 <- as.numeric(sub("\\).*", "", sub(".*\\(", "", HH2005$ID13)))
HH2005$SA4 <- as.numeric(sub("\\).*", "", sub(".*\\(", "", HH2005$SA4)))
HH2005$FU1 <- as.numeric(sub("\\).*", "", sub(".*\\(", "", HH2005$FU1)))
HH2005$WA1 <- as.numeric(sub("\\).*", "", sub(".*\\(", "", HH2005$WA1)))
HH2012$URBAN2011 <- as.numeric(str_sub(HH2012$URBAN2011,-1,-1))
HH2012$ID13 <- as.numeric(str_sub(HH2012$ID13,-1,-1))
HH2012$SA4 <- as.numeric(str_sub(HH2012$SA4, 2, 2))
HH2012$FU1 <- as.numeric(str_sub(HH2012$FU1,-1,-1))
HH2012$WA1A <- as.numeric(str_sub(HH2012$WA1A,-2,-1))
# 4. Aggregate data to village level
VilInd2005 <- aggregate(HH2005[ ,HH2005Controls], by=list(HH2005$id), FUN=mean, na.rm=TRUE)
VilInd2012 <- aggregate(HH2012[ ,HH2012Controls], by=list(HH2012$id), FUN=mean, na.rm=TRUE)
# 5. Rename Variables
VilInd2005 <- rename(VilInd2005, c("Group.1"="id", "URBAN"="urban", "INCOME"="income", "ID13"="caste", "ID16"="yearsLivingHere","SA4"="ownToilet", "FU1"="electricity", "FU1A"="electricityHours", "WA1"="drinkingWaterSource"))
VilInd2012 <- rename(VilInd2012, c("Group.1"="id", "URBAN2011"="urban", "INCOME"="income", "ID13"="caste", "ID15"="yearsLivingHere","SA4"="ownToilet", "FU1"="electricity", "FU1A"="electricityHours", "WA1A"="drinkingWaterSource"))
# 6. Merge with df2005 and df2012
df2005 <- merge(df2005, VilInd2005, by="id")
df2012 <- merge(df2012, VilInd2012, by="id")
## clean workspace
rm(HH2005Controls, HH2012Controls, VilInd2005, VilInd2012, HH2005, HH2012)
# Remove Repeat Data
df2005 <- df2005[!duplicated(df2005$id),]
df2012 <- df2012[!duplicated(df2012$id),]
# 1. Identify variables number of medical facilities.
medicalFacilityVariables2005 = c("id", "vma1", "vma2", "vma3", "vma4", "vma5", "vma7", "vma8", "vma9", "vma10", "vma13")
medicalFacilityRename2005 = c("vma1"="healthSubCenter", "vma2"="primaryHealthCenter", "vma3"="communityHealthCenter", "vma4"="districtHospital", "vma5"="govtMaternityCenter", "vma7"="pvtClinicTrainedDoc", "vma8"="pvtClinicUntrainedDoc", "vma9"="pvtHospital", "vma10"="pvtPharm", "vma13"="otherGovtMedFacility")
medicalFacilityVariables2012 = c("id", "VMA1", "VMA3", "VMA4", "VMA5", "VMA6", "VMA7", "VMA8", "VMA9", "VMA10", "VMA11")
medicalFacilityRename2012 = c("VMA1"="healthSubCenter", "VMA3"="primaryHealthCenter", "VMA4"="communityHealthCenter", "VMA5"="districtHospital", "VMA6"="govtMaternityCenter", "VMA7"="pvtClinicTrainedDoc", "VMA8"="pvtClinicUntrainedDoc", "VMA9"="pvtHospital", "VMA10"="pvtPharm", "VMA11"="otherGovtMedFacility")
# 2. Identify variables for distance to medical facility if not in town.
medicalFacilityDist2005 = c("id", "vmd1", "vmd2", "vmd3", "vmd4", "vmd5", "vmd7", "vmd8", "vmd9", "vmd10", "vmd13")
medicalFacilityDistRename2005 = c("vmd1"="distHealthSubCenter", "vmd2"="distPrimaryHealthCenter", "vmd3"="distCommunityHealthCenter", "vmd4"="distDistrictHospital", "vmd5"="distGovtMaternityCenter", "vmd7"="distPvtClinicTrainedDoc", "vmd8"="distPvtClinicUntrainedDoc", "vmd9"="distPvtHospital", "vmd10"="distPvtPharm", "vmd13"="distOtherGovtMedFacility")
medicalFacilityDist2012 = c("id", "VMD1", "VMD3", "VMD4", "VMD5", "VMD6", "VMD7", "VMD8", "VMD9", "VMD10", "VMD11")
medicalFacilityDistRename2012 = c("VMD1"="distHealthSubCenter", "VMD3"="distPrimaryHealthCenter", "VMD4"="distCommunityHealthCenter", "VMD5"="distDistrictHospital", "VMD6"="distGovtMaternityCenter", "VMD7"="distPvtClinicTrainedDoc", "VMD8"="distPvtClinicUntrainedDoc", "VMD9"="distPvtHospital", "VMD10"="distPvtPharm", "VMD11"="distOtherGovtMedFacility")
# 3. Bind Data to df2005 and df2012 and rename properly
df2005 <- merge(df2005, VIL2005[,medicalFacilityVariables2005], by="id")
df2005 <- rename(df2005, replace = medicalFacilityRename2005)
df2005 <- merge(df2005, VIL2005[,medicalFacilityDist2005], by="id")
df2005 <- rename(df2005, replace = medicalFacilityDistRename2005)
df2012 <- merge(df2012, VIL2012[,medicalFacilityVariables2012], by="id")
df2012 <- rename(df2012, replace = medicalFacilityRename2012)
df2012 <- merge(df2012, VIL2012[,medicalFacilityDist2012], by="id")
df2012 <- rename(df2012, replace = medicalFacilityDistRename2012)
# 4. Remove Repeat Data
df2005 <- df2005[!duplicated(df2005$id),]
df2012 <- df2012[!duplicated(df2012$id),]
# Clear Workspace
rm(VIL2005, VIL2012, medicalFacilityVariables2005, medicalFacilityRename2005, medicalFacilityDist2005, medicalFacilityDistRename2005, medicalFacilityVariables2012, medicalFacilityRename2012, medicalFacilityDist2012, medicalFacilityDistRename2012)
df <- rbind(df2005, df2012)
df <- data.frame(lapply(df[,], function(x) replace(x, x %in% -100:-1, NA)))
write.csv(df, file = "ruralHealthAndRoadsOfIndianVillages.csv")
write.csv(df2005, file = "ruralHealthAndRoadsOfIndianVillages2005.csv")
write.csv(df2012, file = "ruralHealthAndRoadsOfIndianVillages2012.csv")
# df <- read.csv(file = "ruralHealthAndRoadsOfIndianVillages.csv")
rm(df, df2005, df2012)
knitr::opts_chunk$set(echo = TRUE)
# data manipulation
library(dplyr)
library(tidyr)
# plotting
library(ggplot2)
# regressions: robust and panel
library(MASS)
library(plm)
library(plm)
knitr::opts_chunk$set(echo = TRUE)
# data manipulation
library(dplyr)
library(tidyr)
# plotting
library(ggplot2)
# regressions: robust and panel
library(MASS)
library(plm)
library(foreign)
library(sandwich)
library(lmtest)
library(stargazer)
# other
library(memisc)
library(pander)
knitr::opts_chunk$set(echo = TRUE)
# plotting
library(ggplot2)
# regressions: robust and panel
library(MASS)
library(plm)
library(foreign)
library(sandwich)
library(lmtest)
library(stargazer)
# data manipulation
library(dplyr)
library(tidyr)
# other
library(memisc)
library(pander)
df <- read.csv("ruralHealthAndRoadsOfIndianVillages.csv", header = TRUE, row.names = 1)
df2005 <- read.csv("ruralHealthAndRoadsOfIndianVillages2005.csv", header = TRUE, row.names = 1)
df2005 <- read.csv("ruralHealthAndRoadsOfIndianVillages2012.csv", header = TRUE, row.names = 1)
rm(df.split)
dim(df)
knitr::kable(head(df))
colnames(df)
summary(df)
colnames(df)
lm.mb1 <- lm(mbDaysIncapacitated ~ roadPaved, data = df)
lm.mb2 <- lm(mbDaysIncapacitated ~ distanceToPavedRoad, data = df)
lm.mb3 <- lm(mbDaysIncapacitated ~ roadMonsoonUsability, data = df)
mtableUni <- mtable(
'MB 1' = lm.mb1,
'MB 2' = lm.mb2,
'MB 3' = lm.mb3,
summary.stats = c('R-squared','F','p','N'))
rm(lm.mb1, lm.mb2, lm.mb3)
mtableUni
rm(mtableMulti)
lm.m.mb1 <- lm(mbDaysIncapacitated ~ distanceToPavedRoad + electricity + income, data=df)
lm.m.mb2 <- lm(mbDaysIncapacitated ~ distanceToPavedRoad + distanceToNearestTown + writingScore + smokeTobacco , data=df)
lm.m.mb3 <- lm(mbDaysIncapacitated ~ distanceToPavedRoad + electricity + income + distanceToNearestTown + writingScore + smokeTobacco , data=df)
mtableMulti1 <- mtable(
'MB 1' = lm.m.mb1,
'MB 2' = lm.m.mb2,
'MB 3' = lm.m.mb3,
summary.stats = c('R-squared','F','p','N'))
rm(lm.m.mb1, lm.m.mb2, lm.m.mb3)
mtableMulti1
rm(mtableMulti1)
lm.m.mb1 <- lm(mbDaysIncapacitated ~ roadPaved + electricity + income, data=df)
lm.m.mb1.hc1 <- coeftest(lm.m.mb1, vcov = vcovHC(lm.m.mb1, "HC1"))
lm.m.mb2 <- lm(mbDaysIncapacitated ~ roadPaved + distanceToNearestTown + writingScore + smokeTobacco , data=df)
lm.m.mb3 <- lm(mbDaysIncapacitated ~ roadPaved + electricity + income + distanceToNearestTown + writingScore + smokeTobacco , data=df)
mtableMulti2 <- mtable(
'MB 1' = lm.m.mb1,
'MB 2' = lm.m.mb2,
'MB 3' = lm.m.mb3,
summary.stats = c('R-squared','F','p','N'))
mtableMulti2
rm(mtableMulti2)
# comparison of different rovust vs non-robust ols
stargazer(lm.m.mb1, lm.m.mb1.hc1, type = "html", title="Results",
digits = 4, align = TRUE, out="robust_regression_table_comparisons.html")
openFileInOS("robust_regression_table_comparisons.html")
# clean workspace
rm( lm.m.mb1, lm.m.mb2, lm.m.mb3, lm.m.mb1.hc1)
print("Need to Do. See Regression Sandbox for some prelimary work.")
# distance to paved road
lm.mb1 <- lm(mbDaysIncapacitated ~ distanceToPavedRoad + electricity + income + distanceToNearestTown + writingScore + smokeTobacco, data=df)
summary(lm.mb1)
# paved vs unpaved road
lm.mb2 <- lm(mbDaysIncapacitated ~ roadPaved + electricity + income + distanceToNearestTown + writingScore + smokeTobacco, data=df)
summary(lm.mb2)
# road usable during monsoons
lm.mb3 <- lm(mbDaysIncapacitated ~ roadMonsoonUsability + electricity + income + distanceToNearestTown + writingScore + smokeTobacco, data=df)
summary(lm.mb3)
# village-fixed effects panel regression of distance to paved road
plm.mb1 <- plm(mbDaysIncapacitated ~ distanceToPavedRoad + electricity + income + distanceToNearestTown + writingScore + smokeTobacco, data=df, index = c("id", "year"), model = "within")
plm.mb1.hc1 <- coeftest(plm.mb1, vcov = vcovHC(plm.mb1, "arellano"))
summary(plm.mb1)
# test is fixed effects is better
pFtest(plm.mb1, lm.mb1)
# # print out fixed effects
# fixef(plm.mb1)
stargazer(plm.mb1, plm.mb1.hc1, type = "html", title="Results Fixed Effects",
digits = 4, align = TRUE, out="robust_regression_table_comparisons2.html")
openFileInOS("robust_regression_table_comparisons2.html")
# Clean Workspace
rm(lm.mb1, lm.mb2, lm.mb3, plm.mb1, plm.mb1.hc1)
df <- read.csv("ruralHealthAndRoadsOfIndianVillages.csv", header = TRUE, row.names = 1)
df2005 <- read.csv("ruralHealthAndRoadsOfIndianVillages2005.csv", header = TRUE, row.names = 1)
df2012 <- read.csv("ruralHealthAndRoadsOfIndianVillages2012.csv", header = TRUE, row.names = 1)
rm(df.split)
knitr::opts_chunk$set(echo = TRUE)
# plotting
library(ggplot2)
# regressions: robust and panel
library(MASS)
library(plm)
library(foreign)
library(sandwich)
library(lmtest)
library(stargazer)
# data manipulation
library(dplyr)
library(tidyr)
# other
library(memisc)
library(pander)
library(stargazer)
knitr::opts_chunk$set(echo = TRUE)
# plotting
library(ggplot2)
# regressions: robust and panel
library(MASS)
library(plm)
library(foreign)
library(sandwich)
library(lmtest)
library(stargazer)
# data manipulation
library(dplyr)
library(tidyr)
# other
library(memisc)
library(pander)
df <- read.csv("ruralHealthAndRoadsOfIndianVillages.csv", header = TRUE, row.names = 1)
df2005 <- read.csv("ruralHealthAndRoadsOfIndianVillages2005.csv", header = TRUE, row.names = 1)
df2012 <- read.csv("ruralHealthAndRoadsOfIndianVillages2012.csv", header = TRUE, row.names = 1)
View(df2005)
dfd <- df2005[, id:roadPaved]
dfd <- df2005[, c("id", "roadPaved")]
dfd$roadPaved - df2012$roadPaved
dfd$roadPaved - df2005$roadPaved
dfd <- df2012[, c("id", "roadPaved")]
dfd$roadPaved - df2005$roadPaved
diffVar <- c("roadPaved")
dfd <- merge(df2005[,diffVar], df2012[, diffVar])
View(dfd)
dfd <- merge(df2005[,diffVar], df2012[, diffVar], by="id")
View(df2005)
diffVar <- c("roadPaved")
dfd <- merge(df2005[,diffVar], df2012[, diffVar], by="id")
dfd <- merge(df2005[,"roadPaved"], df2012[, "roadPaved"], by="id")
dfd <- merge(x=df2005[,"roadPaved"], y=df2012[, "roadPaved"], x.by="id", y.by="id")
View(dfd)
diffVar <- c("roadPaved")
dfd <- merge(x=df2005[,diffVar], y=df2012[, diffVar], x.by="id", y.by="id")
View(dfd)
View(df2012)
dfd <- df[,"id"]
dfd <- data.frame(df2005[,"id"])
dfd <- data.frame(df2005[,c("id", "roadPaved")])
dfd <- merge(df2005$roadPaved, df2012$roadPaved, by="id")
str(dfd)
dfd <- data.frame(df2005$id)
str(dfd)
dfd <- data.frame(as.character(df2005$id))
str(dfd)
dfd <- merge(df2005$roadPaved, df2012$roadPaved, by="id")
dfd <- merge(x=df2005, y=df2012[, diffVar], x.by="id", y.by="id")
diffVar <- c("roadPaved")
dfd <- data.frame(as.character(df2005$id))
dfd <- data.frame(df2005$id)
dfd <- merge(df2005, df2012[,diffVar], by="id")
diffVar <- c("roadPaved")
dfd <- data.frame(df2005$id)
dfd <- merge(dfd, df2012[,diffVar], by="id")
diffVar <- c("roadPaved")
dfd <- data.frame(df2005$id)
dfd <- merge(dfd, df2012[,diffVar], x.by="id", y.by="id")
dfd <- merge(x=df2005[, diffVar], y=df2012[, diffVar], by="id")
diffVar <- c("id", "roadPaved")
dfd <- merge(x=df2005[, diffVar], y=df2012[, diffVar], by="id")
View(dfd)
dfd$newRoad <- dfd[,"2012"] - dfd[,"2005"]
dfd[, "newRoad"] <- dfd[,"2012"] - dfd[,"2005"]
dfd <- merge('2005'=df2005[, diffVars], '2012'=df2012[, diffVars], by="id")
diffVars <- c("id", "roadPaved")
dfd <- merge('2005'=df2005[, diffVars], '2012'=df2012[, diffVars], by="id")
dfd[, "newRoad"] <- dfd[,"roadPaved.x"] - dfd[,"roadPaved.x"]
str(dfd)
dfd[, "newRoad"] <- dfd[,"roadPaved.y"] - dfd[,"roadPaved.x"]
table(dfd)
table(dfd$newRoad)
table(dfd$newRoad)[1]
b
table(dfd$newRoad)[3]
table(dfd$newRoad)[3]
table(dfd$newRoad)[3]
table(dfd$newRoad)[2]
table(dfd$newRoad)[1]
mtableUni <- mtable(
'MB 1' = lm.mb1,
'MB 2' = lm.mb2,
summary.stats = c('R-squared','Adjusted R-squared', 'F','p','N'))
lm.mb1 <- lm(mbDaysIncapacitated ~ roadPaved, data = df)
lm.mb2 <- lm(mbDaysIncapacitated ~ distanceToPavedRoad, data = df)
mtableUni <- mtable(
'MB 1' = lm.mb1,
'MB 2' = lm.mb2,
summary.stats = c('R-squared','Adjusted R-squared', 'F','p','N'))
mtableUni <- mtable(
'MB 1' = lm.mb1,
'MB 2' = lm.mb2,
summary.stats = TRUE)
mtableUni
mtableUni <- mtable(
'MB 1' = lm.mb1,
'MB 2' = lm.mb2,
summary.stats = c('R-squared','adj. R-squared', 'F','p','N'))
rm(lm.mb1, lm.mb2, lm.mb3)
mtableUni
lm.m.mb1 <- lm(mbDaysIncapacitated ~ distanceToPavedRoad + electricity + income, data=df)
lm.m.mb2 <- lm(mbDaysIncapacitated ~ distanceToPavedRoad + distanceToNearestTown + writingScore + smokeTobacco , data=df)
lm.m.mb3 <- lm(mbDaysIncapacitated ~ distanceToPavedRoad + electricity + income + distanceToNearestTown + writingScore + smokeTobacco , data=df)
mtableMulti1 <- mtable(
'MB 1' = lm.m.mb1,
'MB 2' = lm.m.mb2,
'MB 3' = lm.m.mb3,
summary.stats = c('R-squared','adj. R-squared','F','p','N'))
rm(lm.m.mb1, lm.m.mb2, lm.m.mb3)
mtableMulti1
rm(mtableMulti1)
lm.m.mb1 <- lm(mbDaysIncapacitated ~ roadPaved + electricity + income, data=df)
lm.m.mb1.hc1 <- coeftest(lm.m.mb1, vcov = vcovHC(lm.m.mb1, "HC1"))
lm.m.mb2 <- lm(mbDaysIncapacitated ~ roadPaved + distanceToNearestTown + writingScore + smokeTobacco , data=df)
lm.m.mb3 <- lm(mbDaysIncapacitated ~ roadPaved + electricity + income + distanceToNearestTown + writingScore + smokeTobacco , data=df)
mtableMulti2 <- mtable(
'MB 1' = lm.m.mb1,
'MB 2' = lm.m.mb2,
'MB 3' = lm.m.mb3,
summary.stats = c('R-squared','F','p','N'))
mtableMulti2
rm(mtableMulti2)
lm.m.mb1 <- lm(mbDaysIncapacitated ~ roadPaved + electricity + income, data=df)
lm.m.mb1.hc1 <- coeftest(lm.m.mb1, vcov = vcovHC(lm.m.mb1, "HC1"))
lm.m.mb2 <- lm(mbDaysIncapacitated ~ roadPaved + distanceToNearestTown + writingScore + smokeTobacco , data=df)
lm.m.mb3 <- lm(mbDaysIncapacitated ~ roadPaved + electricity + income + distanceToNearestTown + writingScore + smokeTobacco , data=df)
mtableMulti2 <- mtable(
'MB 1' = lm.m.mb1,
'MB 2' = lm.m.mb2,
'MB 3' = lm.m.mb3,
summary.stats = c('R-squared','adj. R-squared','F','p','N'))
mtableMulti2
rm(mtableMulti2)
lm.m.mb1 <- lm(mbDaysIncapacitated ~ roadPaved + electricity + income, data=df)
lm.m.mb2 <- lm(mbDaysIncapacitated ~ roadPaved + distanceToNearestTown + writingScore + smokeTobacco , data=df)
lm.m.mb3 <- lm(mbDaysIncapacitated ~ roadPaved + electricity + income + distanceToNearestTown + writingScore + smokeTobacco , data=df)
lm.m.mb3.hc1 <- coeftest(lm.m.mb3, vcov = vcovHC(lm.m.mb3, "HC1"))
mtableMulti2 <- mtable(
'MB 1' = lm.m.mb1,
'MB 2' = lm.m.mb2,
'MB 3' = lm.m.mb3,
summary.stats = c('R-squared','adj. R-squared','F','p','N'))
mtableMulti2
rm(mtableMulti2)
plm.mb1 <- plm(mbDaysIncapacitated ~ distanceToPavedRoad + electricity + income + distanceToNearestTown + writingScore + smokeTobacco, data=df, index = c("id", "year"), model = "within")
plm.mb1.hc1 <- coeftest(plm.mb1, vcov = vcovHC(plm.mb1, "arellano"))
plm.mb2 <- plm(mbDaysIncapacitated ~ roadPaved + electricity + income + distanceToNearestTown + writingScore + smokeTobacco, data=df, index = c("id", "year"), model = "within")
plm.mb2.hc1 <- coeftest(plm.mb2, vcov = vcovHC(plm.mb2, "arellano"))
mtableMulti3 <- mtable(
'MB 1 FE Panel' = plm.mb1,
'MB 2 FE Panel' = plm.mb2,
summary.stats = c('R-squared','adj. R-squared','F','p','N'))
mtableMulti3 <- mtable(
'MB 1 FE Panel' = plm.mb1,
'MB 2 FE Panel' = plm.mb2,
summary.stats = FALSE)
plm.mb1 <- plm(mbDaysIncapacitated ~ distanceToPavedRoad + electricity + income + distanceToNearestTown + writingScore + smokeTobacco, data=df, index = c("id", "year"), model = "within")
plm.mb1.hc1 <- coeftest(plm.mb1, vcov = vcovHC(plm.mb1, "arellano"))
summary(plm.mb1)
plm.mb2 <- plm(mbDaysIncapacitated ~ roadPaved + electricity + income + distanceToNearestTown + writingScore + smokeTobacco, data=df, index = c("id", "year"), model = "within")
plm.mb2.hc1 <- coeftest(plm.mb2, vcov = vcovHC(plm.mb2, "arellano"))
summary(plm.mb2)
# test if fixed effects is better. p is small, use fixed effects
pFtest(plm.mb1, lm.mb1)
# distance to paved road
lm.mb1 <- lm(mbDaysIncapacitated ~ distanceToPavedRoad + electricity + income + distanceToNearestTown + writingScore + smokeTobacco, data=df)
plm.mb1 <- plm(mbDaysIncapacitated ~ distanceToPavedRoad + electricity + income + distanceToNearestTown + writingScore + smokeTobacco, data=df, index = c("id", "year"), model = "within")
plm.mb1.hc1 <- coeftest(plm.mb1, vcov = vcovHC(plm.mb1, "arellano"))
summary(plm.mb1)
# paved vs unpaved road
lm.mb2 <- lm(mbDaysIncapacitated ~ roadPaved + electricity + income + distanceToNearestTown + writingScore + smokeTobacco, data=df)
plm.mb2 <- plm(mbDaysIncapacitated ~ roadPaved + electricity + income + distanceToNearestTown + writingScore + smokeTobacco, data=df, index = c("id", "year"), model = "within")
plm.mb2.hc1 <- coeftest(plm.mb2, vcov = vcovHC(plm.mb2, "arellano"))
summary(plm.mb2)
# test if fixed effects is better. p is small, use fixed effects
pFtest(plm.mb1, lm.mb1)
pFtest(plm.mb2, lm.mb2)
stargazer(plm.mb1, plm.mb1.hc1, type = "html", title="Results Fixed Effects",
digits = 4, align = TRUE, out="robust_regression_table_comparisons2.html")
openFileInOS("robust_regression_table_comparisons2.html")
# Clean Workspace
rm( plm.mb1, plm.mb1.hc1, plm.mb2, plm.mb2.hc1)
mydata = read.dta("http://dss.princeton.edu/training/Panel101.dta")
head(mydata)
rm(mydata)
mydata$year <- df$[,c("id", "year")]
mydata$year <- df[,c("id", "year")]
mydata <- df[,c("id", "year")]
diffVars <- c("id", "roadPaved", "mbSTDorAIDS")
dfd <- merge(df2005[, diffVars], df2012[, diffVars], by="id")
diffVars <- c("id", "roadPaved", "mbSTDorAIDS")
dfd <- merge(df2005[, diffVars], df2012[, diffVars], by="id")
dfd[, "diffMbSTDOrAIDS"] <- dfd[, "mbSTDorAIDS.y"] - dfd[, "mbSTDorAIDS.x"]
table(dfd$newRoad)
diffVars <- c("id", "roadPaved", "mbSTDorAIDS")
dfd <- merge(df2005[, diffVars], df2012[, diffVars], by="id")
dfd[, "diffRoadPaved"] <- dfd[,"roadPaved.y"] - dfd[,"roadPaved.x"]
dfd[, "diffMbSTDOrAIDS"] <- dfd[, "mbSTDorAIDS.y"] - dfd[, "mbSTDorAIDS.x"]
table(dfd$newRoad)
diffVars <- c("id", "roadPaved", "mbSTDorAIDS")
dfd <- merge(df2005[, diffVars], df2012[, diffVars], by="id")
rm(dfd)
diffVars <- c("id", "roadPaved", "mbSTDorAIDS")
dfd <- merge(df2005[, diffVars], df2012[, diffVars], by="id")
dfd[, "diffRoadPaved"] <- dfd[,"roadPaved.y"] - dfd[,"roadPaved.x"]
dfd[, "diffMbSTDOrAIDS"] <- dfd[, "mbSTDorAIDS.y"] - dfd[, "mbSTDorAIDS.x"]
table(dfd$diffMbSTDOrAIDS)
lm(dfd$diffMbSTDOrAIDS ~ dfd$diffRoadPaved)
summary(lm.diff)
lm.diff <- lm(dfd$diffMbSTDOrAIDS ~ dfd$diffRoadPaved)
summary(lm.diff)
mbTuberculosis
diffVars <- c("id", "roadPaved", "mbTuberculosis")
dfd <- merge(df2005[, diffVars], df2012[, diffVars], by="id")
dfd <- merge(df2005[, diffVars], df2012[, diffVars], by="id")
dfd[, "diffRoadPaved"] <- dfd[,"roadPaved.y"] - dfd[,"roadPaved.x"]
dfd[, "diffMbTuberculosis"] <- dfd[, "mbTuberculosis.y"] - dfd[, "mbTuberculosis.x"]
table(dfd$diffRoadPaved)
summary(dfd$diffMbSTDOrAIDS)
summary(dfd$diffMbTuberculosis)
lm.diff <- lm(dfd$diffMbSTDOrAIDS ~ dfd$diffRoadPaved)
summary(lm.diff)
lm.diff <- lm(dfd$diffMbTuberculosis ~ dfd$diffRoadPaved)
summary(lm.diff)
